[{"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\index.js":"1","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\App.js":"2","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\reportWebVitals.js":"3","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\containers\\Login\\login.jsx":"4","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\actions\\actions.js":"5","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\constants\\apiConstants.js":"6","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\requester\\requester.js":"7","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\constants\\enviroments.js":"8","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\constants\\globalConstants.js":"9","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\serviceWorker.js":"10","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\Store\\configureStore.js":"11","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\Store\\reducers.js":"12","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\Store\\RootSaga.js":"13","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\containers\\Register\\Register.jsx":"14"},{"size":1126,"mtime":1608319108000,"results":"15","hashOfConfig":"16"},{"size":1341,"mtime":1608415973767,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":5907,"mtime":1608667751362,"results":"19","hashOfConfig":"16"},{"size":1385,"mtime":1608661628370,"results":"20","hashOfConfig":"16"},{"size":387,"mtime":1608659390585,"results":"21","hashOfConfig":"16"},{"size":1163,"mtime":1608218738959,"results":"22","hashOfConfig":"16"},{"size":1186,"mtime":1608665207871,"results":"23","hashOfConfig":"16"},{"size":162,"mtime":1608659410699,"results":"24","hashOfConfig":"16"},{"size":4811,"mtime":1608413936882,"results":"25","hashOfConfig":"16"},{"size":1673,"mtime":1608319107999,"results":"26","hashOfConfig":"16"},{"size":410,"mtime":1608319108000,"results":"27","hashOfConfig":"16"},{"size":106,"mtime":1608319107999,"results":"28","hashOfConfig":"16"},{"size":9692,"mtime":1608341957393,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1vnvna8",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\index.js",[],["62","63"],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\App.js",["64"],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\reportWebVitals.js",[],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\containers\\Login\\login.jsx",["65","66","67","68","69"],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\actions\\actions.js",["70"],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\constants\\apiConstants.js",[],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\requester\\requester.js",[],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\constants\\enviroments.js",[],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\utils\\constants\\globalConstants.js",[],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\serviceWorker.js",[],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\Store\\configureStore.js",["71"],"import { applyMiddleware, compose, createStore } from 'redux';\r\nimport storageSession from 'redux-persist/lib/storage/session';\r\nimport thunk from 'redux-thunk';\r\nimport { persistStore, persistReducer, PURGE } from 'redux-persist';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { createBrowserHistory } from 'history';\r\nimport { routerMiddleware } from 'react-router-redux';\r\n// TO DO: import immutableTransform from 'redux-persist-transform-immutable';\r\nimport rootReducer from './reducers';\r\nimport rootSaga from './RootSaga';\r\n\r\nexport const history = createBrowserHistory();\r\nexport const sagaMiddleware = createSagaMiddleware();\r\n\r\nexport default function configureStore(preloadedState) {\r\n  /* eslint-disable no-underscore-dangle */\r\n  const composeEnhancers =\r\n    process.env.NODE_ENV !== 'production' &&\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n      : compose;\r\n  /* eslint-enable */\r\n\r\n  const persistConfig = {\r\n    // TO DO:\r\n    // transforms: [immutableTransform()],\r\n    key: 'root',\r\n    storage: storageSession,\r\n    blacklist: [],\r\n  };\r\n\r\n  const rootReducerMiddleware = (state, action) =>\r\n    rootReducer(state, action, persistConfig);\r\n\r\n  const persistedReducer = persistReducer(persistConfig, rootReducerMiddleware);\r\n\r\n  const store = createStore(\r\n    persistedReducer,\r\n    preloadedState,\r\n    composeEnhancers(\r\n      applyMiddleware(sagaMiddleware, routerMiddleware(history), thunk),\r\n    ),\r\n  );\r\n\r\n  store.runSaga = sagaMiddleware.run(rootSaga);\r\n\r\n  const persistor = persistStore(store, {});\r\n\r\n  return { store, persistor };\r\n}\r\n","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\Store\\reducers.js",["72"],"import { combineReducers } from \"redux\";\r\nimport { purgeStoredState } from \"redux-persist\";\r\n\r\nconst appReducers = combineReducers({});\r\n\r\nexport default (state, action, persistConfig) => {\r\n  // Reset to initialState\r\n  if (action.type === \"PURGE\") {\r\n    purgeStoredState(persistConfig);\r\n    // Default or Current State\r\n    return appReducers({}, action);\r\n  }\r\n\r\n  return appReducers(state, action);\r\n};\r\n","C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\Store\\RootSaga.js",[],"C:\\Users\\xxx\\Documents\\hfy-front-system\\src\\containers\\Register\\Register.jsx",["73","74"],"import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Radio, Select, Input } from \"antd\";\r\nimport { callApiLogin } from \"../../utils/actions/actions\";\r\nimport GLOBAL_CONSTANTS from \"../../utils/constants/globalConstants\";\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport {\r\n  UserOutlined,\r\n  PhoneOutlined,\r\n  MailOutlined,\r\n  LockOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst { Option } = Select;\r\n\r\nconst Register = (props) => {\r\n  const { history } = props;\r\n  const [userType, setUserType] = useState(1);\r\n\r\n  const selectPerson = (\r\n    <div className=\"login_main\">\r\n      <div className=\"login_card_form\">\r\n        <div className=\"login_top_form\">\r\n          <h1> ¿Qué te trae por aquí? </h1>\r\n          <div className=\"login_inputs_form\">\r\n            <Radio.Group name=\"radiogroup\" defaultValue={1}>\r\n              <p style={{ marginBottom: \"32px\" }}>\r\n                <Radio value={1}> Rento una propiedad </Radio>\r\n              </p>\r\n              <p style={{ marginBottom: \"32px\" }}>\r\n                <Radio value={2}>Soy dueño de una propiedad </Radio>\r\n              </p>\r\n              <p style={{ marginBottom: \"32px\" }}>\r\n                <Radio value={3}> Asesoro a propietarios e inquilinos </Radio>\r\n              </p>\r\n            </Radio.Group>\r\n            <div className=\"button_init_primary\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setUserType(2);\r\n                }}\r\n              >\r\n                <span>Continuar</span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const selectForm = (\r\n    <div className=\"login_main\" style={{ height: \"100%\" }}>\r\n      <div className=\"login_card_form large\">\r\n        <div className=\"register_holder\">\r\n          <div className=\"login_top_form\">\r\n            <h1> Completa tu perfil </h1>\r\n            <label className=\"fieldset_title\">Información personal</label>\r\n            <div className=\"register_row half\">\r\n              <Select placeholder=\"Tipo de Persona\">\r\n                <Option value=\"jack\">Jack</Option>\r\n                <Option value=\"lucy\">Lucy</Option>\r\n                <Option value=\"disabled\" disabled>\r\n                  Disabled\r\n                </Option>\r\n                <Option value=\"Yiminghe\">yiminghe</Option>\r\n              </Select>\r\n              <Select placeholder=\"Aval\">\r\n                <Option value=\"jack\">Jack</Option>\r\n                <Option value=\"lucy\">Lucy</Option>\r\n                <Option value=\"disabled\" disabled>\r\n                  Disabled\r\n                </Option>\r\n                <Option value=\"Yiminghe\">yiminghe</Option>\r\n              </Select>\r\n            </div>\r\n            <div className=\"register_row\">\r\n              <Input suffix={<UserOutlined />} placeholder=\"Nombre(s):\" />\r\n            </div>\r\n            <div className=\"register_row half\">\r\n              <Input suffix={<UserOutlined />} placeholder=\"Primer Apellido\" />\r\n              <Input suffix={<UserOutlined />} placeholder=\"Segundo Apellido\" />\r\n            </div>\r\n            <label className=\"fieldset_title\"> Información de contacto </label>\r\n            <div className=\"register_row half\">\r\n              <Input\r\n                suffix={<PhoneOutlined />}\r\n                placeholder=\"Teléfono celular\"\r\n              />\r\n              <Input\r\n                suffix={<MailOutlined />}\r\n                placeholder=\"Correo electrónico\"\r\n              />\r\n            </div>\r\n            <label className=\"fieldset_title\"> Contraseña </label>\r\n            <div className=\"register_row half\">\r\n              <Input\r\n                suffix={<LockOutlined />}\r\n                placeholder=\"Contraseña\"\r\n                type=\"password\"\r\n              />\r\n              <Input\r\n                suffix={<LockOutlined />}\r\n                placeholder=\"Confirmar Contraseña\"\r\n                type=\"password\"\r\n              />\r\n            </div>\r\n            <div className=\"button_init_primary\" style={{ margin: \"16px 0 0\" }}>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setUserType(3);\r\n                }}\r\n              >\r\n                <span> Finalizar registro </span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const insterCodeCompoent = (\r\n    <div className=\"login_main\">\r\n      <div className=\"login_card_form\">\r\n        <div className=\"login_top_form\">\r\n          <h1> Ingresa tu código </h1>\r\n          <p className=\"recoverInstructions\">\r\n            Enviamos un código de confirmacion al correo correo@corroe.com\r\n          </p>\r\n          <div className=\"codeForm\">\r\n            <div className=\"codeFormItem\">\r\n              <Input\r\n                id=\"input-code-validate-0\"\r\n                type=\"number\"\r\n                maxLength={1}\r\n                onChange={(event) => {\r\n                  if (event.target.value === \"\") {\r\n                  } else {\r\n                    document.getElementById(\"input-code-validate-1\").focus();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"codeFormItem\">\r\n              <Input\r\n                id=\"input-code-validate-1\"\r\n                type=\"number\"\r\n                maxLength={1}\r\n                onChange={(event) => {\r\n                  if (event.target.value === \"\") {\r\n                    document.getElementById(\"input-code-validate-0\").focus();\r\n                  } else {\r\n                    document.getElementById(\"input-code-validate-2\").focus();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"codeFormItem\">\r\n              <Input\r\n                id=\"input-code-validate-2\"\r\n                type=\"number\"\r\n                maxLength={1}\r\n                onChange={(event) => {\r\n                  if (event.target.value === \"\") {\r\n                    document.getElementById(\"input-code-validate-1\").focus();\r\n                  } else {\r\n                    document.getElementById(\"input-code-validate-3\").focus();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"codeFormItem\">\r\n              <Input\r\n                id=\"input-code-validate-3\"\r\n                type=\"number\"\r\n                maxLength={1}\r\n                onChange={(event) => {\r\n                  if (event.target.value === \"\") {\r\n                    document.getElementById(\"input-code-validate-2\").focus();\r\n                  } else {\r\n                    document.getElementById(\"input-code-validate-4\").focus();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"codeFormItem\">\r\n              <Input\r\n                id=\"input-code-validate-4\"\r\n                type=\"number\"\r\n                maxLength={1}\r\n                onChange={(event) => {\r\n                  if (event.target.value === \"\") {\r\n                    document.getElementById(\"input-code-validate-3\").focus();\r\n                  } else {\r\n                    document.getElementById(\"input-code-validate-5\").focus();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"codeFormItem\">\r\n              <Input\r\n                id=\"input-code-validate-5\"\r\n                type=\"number\"\r\n                maxLength={1}\r\n                onChange={(event) => {\r\n                  if (event.target.value === \"\") {\r\n                    document.getElementById(\"input-code-validate-4\").focus();\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"button_init_primary\" style={{ margin: \"60px 0 0\" }}>\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                setUserType(4);\r\n              }}\r\n            >\r\n              <span> Validar </span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const successRegister = (\r\n    <div className=\"login_main\">\r\n      <div className=\"login_card_form\">\r\n        <div className=\"login_top_form\">\r\n          <h1> Registro completo </h1>\r\n          <p className=\"recoverInstructions\">\r\n            Felicidades tu registro se realizó con éxito!\r\n          </p>\r\n          <div className=\"button_init_primary\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={() => {\r\n                history.push(\"/login\");\r\n              }}\r\n            >\r\n              <span>Ir al Login</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderTypeComponent = (type) => {\r\n    let component = <div />;\r\n    switch (type) {\r\n      case 1:\r\n        component = selectPerson;\r\n        break;\r\n      case 2:\r\n        component = selectForm;\r\n        break;\r\n      case 3:\r\n        component = insterCodeCompoent;\r\n        break;\r\n      case 4:\r\n        component = successRegister;\r\n        break;\r\n      default:\r\n        component = <div />;\r\n        break;\r\n    }\r\n    return component;\r\n  };\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"login_head_logo\">\r\n        <img src={logo} alt=\"Homify Logo\" className=\"login_logo\" />\r\n      </div>\r\n      {renderTypeComponent(userType)}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nconst mapDispatchToProps = () => {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n",{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":27,"column":20,"nodeType":"81","messageId":"82","endLine":27,"endColumn":25},{"ruleId":"79","severity":1,"message":"83","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":14},{"ruleId":"79","severity":1,"message":"84","line":5,"column":23,"nodeType":"81","messageId":"82","endLine":5,"endColumn":29},{"ruleId":"79","severity":1,"message":"85","line":5,"column":31,"nodeType":"81","messageId":"82","endLine":5,"endColumn":39},{"ruleId":"79","severity":1,"message":"86","line":17,"column":7,"nodeType":"81","messageId":"82","endLine":17,"endColumn":13},{"ruleId":"79","severity":1,"message":"87","line":25,"column":7,"nodeType":"81","messageId":"82","endLine":25,"endColumn":17},{"ruleId":"79","severity":1,"message":"88","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":15},{"ruleId":"79","severity":1,"message":"89","line":4,"column":40,"nodeType":"81","messageId":"82","endLine":4,"endColumn":45},{"ruleId":"90","severity":1,"message":"91","line":6,"column":1,"nodeType":"92","endLine":15,"endColumn":3},{"ruleId":"79","severity":1,"message":"93","line":5,"column":10,"nodeType":"81","messageId":"82","endLine":5,"endColumn":22},{"ruleId":"79","severity":1,"message":"94","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":24},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'Form' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'layout' is assigned a value but never used.","'tailLayout' is assigned a value but never used.","'isEmpty' is defined but never used.","'PURGE' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'callApiLogin' is defined but never used.","'GLOBAL_CONSTANTS' is defined but never used.","no-global-assign","no-unsafe-negation"]